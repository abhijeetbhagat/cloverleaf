{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","peer","React","useState","startDisable","setStartDisable","callDisable","hangUpDisable","a","fetch","response","json","offer","this","session","console","log","sdp","sendAnswer","error","RTCPeerConnection","addEventListener","e","onIceCandidate","onIceStateChange","gotRemoteStream","setRemoteDescription","createAnswer","answer","setLocalDescription","JSON","stringify","method","body","headers","apiResponse","clientVideo","current","srcObject","streams","event","candidate","useRef","ref","playsinline","autoplay","class","disabled","onClick","start","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.065812fc.chunk.js","sourcesContent":["import { React, useRef } from 'react';\r\n\r\nfunction App() {\r\n    const [startDisable, setStartDisable] = React.useState(false);\r\n    const [callDisable, setCallDisable] = React.useState(true);\r\n    const [hangUpDisable, setHangUpDisable] = React.useState(true);\r\n\r\n    const clientVideo = useRef(null);\r\n\r\n    let localstream;\r\n    let peer;\r\n    let session;\r\n\r\n    async function start() {\r\n        setStartDisable(true);\r\n        try {\r\n            const response = await fetch(\"http://localhost:8888/\");\r\n            const offer = await response.json();\r\n            this.session = offer.session;\r\n            console.log(`got offer ${offer.sdp}`);\r\n            await sendAnswer(offer);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async function sendAnswer(offer) {\r\n        this.peer = new RTCPeerConnection({});\r\n        this.peer.addEventListener(\"icecandidate\", e => onIceCandidate(this.peer, e));\r\n        this.peer.addEventListener(\"iceconnectionstatechange\", e => onIceStateChange(this.peer, e));\r\n        this.peer.addEventListener(\"track\", gotRemoteStream);\r\n    \r\n        // even though the offer JSON object has user-defined fields along with the remote sdp,\r\n        // setRemoteDescription will correctly extract the sdp\r\n        await peer.setRemoteDescription(offer);\r\n    \r\n        const answer = await peer.createAnswer();\r\n        await peer.setLocalDescription(answer);\r\n        console.log(`going to send this answer: ${JSON.stringify(answer)}`);\r\n    \r\n        const response = await fetch(\"http://localhost:8888/answer\", {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \"pt\": \"Answer\", \"payload\": JSON.stringify(answer), \"id\": \"\", \"session\": offer.session }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        });\r\n        const apiResponse = await response.json();\r\n        console.log(`api response is ${apiResponse}`);\r\n    }\r\n\r\n    async function gotRemoteStream(e) {\r\n        this.clientVideo.current.srcObject = e.streams[0];\r\n    }\r\n\r\n    async function onIceCandidate(peer, event) {\r\n        try {\r\n        if(event.candidate) {\r\n            // await peer.addIceCandidate(event.candidate);\r\n            const response = await fetch(\"http://localhost:8888/candidate\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({ \"pt\": \"Candidate\", \"payload\": JSON.stringify(event.candidate), \"id\": \"\", \"session\": this.session }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n    \r\n            const apiResponse = await response.json();\r\n            console.log(`api response is ${apiResponse}`);\r\n        } else {\r\n            console.log('we are done gathering candidates');\r\n            const response = await fetch(\"http://localhost:8888/watch\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({ \"pt\": \"Candidate\", \"payload\": JSON.stringify(event.candidate), \"id\": \"\", \"session\": this.session }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n    \r\n            const apiResponse = await response.json();\r\n            console.log(`api response is ${apiResponse}`);\r\n        }\r\n        } catch (e) {\r\n            console.log(\"error setting ice candidate\");\r\n        }\r\n    }\r\n    \r\n    async function onIceStateChange(peer, e) {\r\n        console.log(\"ice state changed\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <video ref={this.clientVideo} playsinline autoplay></video>\r\n            <div class=\"box\">\r\n                <button disabled={startDisable} onClick={(event) => start()}>Start</button>\r\n                <button disabled={callDisable}>Call</button>\r\n                <button disabled={hangUpDisable}>Hang Up</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}